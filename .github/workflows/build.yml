name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11.9'
  CIBW_VERSION: '2.21.3'
  CIBW_BUILD: 'cp311-*'
  CIBW_SKIP: '*-musllinux_*'
  CIBW_BUILD_VERBOSITY: 1

jobs:
  build_wheels_macos:
    name: Build macOS wheels (${{ matrix.arch }})
    runs-on: macos-13
    strategy:
      matrix:
        arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install cibuildwheel
        run: |
          pip install cibuildwheel==${{ env.CIBW_VERSION }}

      - name: Build wheels
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
        run: |
          python -m cibuildwheel --output-dir dist

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-macos-${{ matrix.arch }}-cp311
          path: dist/*.whl

  build_wheels_linux:
    name: Build Linux wheels
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install cibuildwheel
        run: |
          pip install cibuildwheel==${{ env.CIBW_VERSION }}

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir dist

      - name: Upload Linux wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-cp311
          path: dist/*.whl

  build_wheels_windows:
    name: Build Windows wheels
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install cibuildwheel
        run: |
          pip install cibuildwheel==${{ env.CIBW_VERSION }}

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir dist

      - name: Upload Windows wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-cp311
          path: dist/*.whl

  collect_artifacts:
    name: Collect all wheels
    needs: [build_wheels_macos, build_wheels_linux, build_wheels_windows]
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-wheels
          pattern: wheel-*
          merge-multiple: true

      - name: Upload combined wheels
        uses: actions/upload-artifact@v4
        with:
          name: all-wheels
          path: all-wheels/*.whl

      - name: List all wheels
        run: |
          echo "Built wheels:"
          ls -la all-wheels/